{"version":3,"sources":["components/ArrowComponent.js","components/SimulationComponent.js","components/SettingsComponent.js","components/index.js","serviceWorker.js","index.js"],"names":["Arrow","style","position","left","top","transformOrigin","transform","this","props","x","y","angle","Math","PI","height","value","width","backgroundColor","color","borderLeft","borderRight","borderTop","React","PureComponent","Simulation","updateCanvas","canvas","current","state","canvasWidth","ctx","getContext","hex","theme","palette","secondary","main","r","parseInt","slice","g","b","canvasData","getImageData","canvasHeight","results","locations","forEach","loc","round","xScale","yScale","index","data","putImageData","updateDimensions","canvas_container","canvasRect","getBoundingClientRect","documentRect","document","body","setState","clientHeight","clientWidth","canvasLeft","canvasTop","createRef","window","addEventListener","removeEventListener","time","velXY","velocities","accXY","accelerations","arrowLoc","velocity","hypot","atan2","acceleration","ref","showVelocity","showAcceleration","withStyles","withTheme","Settings","startAngleDeg","start","Typography","maxHeight","toFixed","reach","label","name","unit","map","values","TextField","key","type","margin","constants","onChange","changeConstant","InputProps","endAdornment","InputAdornment","changeStart","changeSetting","FormControlLabel","control","Checkbox","checked","darkTheme","createMuiTheme","primary","colors","contrastThreshold","App","calculate","gravity","parseFloat","k","dragCoefficient","airDensity","pow","ballRadius","ballMass","cos","sin","i","iterationLimit","sqrt","timeChange","max","console","log","shouldCalculate","evt","target","event","changeTime","push","classes","ThemeProvider","CssBaseline","className","app","Grid","container","flexGrow","item","xs","paper_container","Paper","display","padding","spacing","Slider","orientation","variant","defaultValue","min","length","flexFlow","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec7f6cdc.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass Arrow extends React.PureComponent {\n    render() {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    left: 0,\n                    top: 0,\n                    transformOrigin: \"2px 0px\",\n                    transform: `translate(${this.props.x - 2}px, ${this.props.y}px) rotate(${this.props.angle - Math.PI}rad)`\n                }}\n            >\n                <div \n                    style={{\n                        height: this.props.value,\n                        width: 4,\n                        backgroundColor: this.props.color,\n                    }}\n                />\n                <div \n                    style={{\n                        position: \"relative\",\n                        height: 0,\n                        width: 0,\n                        left: -8,\n                        borderLeft: \"10px solid transparent\",\n                        borderRight: \"10px solid transparent\",\n                        borderTop: `20px solid ${this.props.color}`,\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Arrow;","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Arrow from './ArrowComponent';\n\nconst styles = theme => ({\n\n})\n\nclass Simulation extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            canvasHeight: 100,\n            canvasWidth:  100,\n            canvasTop:    0,\n            canvasLeft:   0,\n            xScale: 100,\n            yScale: 100,\n        }\n        this.canvas_container = React.createRef();\n        this.canvas = React.createRef();\n    }\n    \n    componentDidMount() {\n        this.updateDimensions()\n        window.addEventListener('resize', this.updateDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n    }\n\n    componentDidUpdate() {\n        this.updateCanvas()\n    }\n\n    updateCanvas = () => {\n        this.canvas.current.width = this.state.canvasWidth\n        const ctx = this.canvas.current.getContext(\"2d\")\n        var hex = this.props.theme.palette.secondary.main\n        var r = parseInt(hex.slice(1, 3), 16),\n            g = parseInt(hex.slice(3, 5), 16),\n            b = parseInt(hex.slice(5, 7), 16),\n            a = 255;\n\n        var canvasData = ctx.getImageData(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n        this.props.results.locations.forEach(loc => {\n            var x = Math.round(loc.x * this.state.xScale)\n            var y = this.state.canvasHeight - Math.round(loc.y * this.state.yScale) - 1\n            if (x < 0 || x > this.state.canvasWidth - 1 || y < 0 || y > this.state.canvasHeight - 1) return\n            var index = (x + y * this.state.canvasWidth) * 4;\n\n            canvasData.data[index + 0] = r;\n            canvasData.data[index + 1] = g;\n            canvasData.data[index + 2] = b;\n            canvasData.data[index + 3] = a;\n        });\n        ctx.putImageData(canvasData, 0, 0);\n    }\n\n    updateDimensions = () => {\n        const canvas = this.canvas_container.current\n        const canvasRect = canvas.getBoundingClientRect()\n        const documentRect = document.body.getBoundingClientRect()\n        this.setState({\n            canvasHeight: canvas.clientHeight - 6,\n            canvasWidth:  canvas.clientWidth - 6,\n            canvasLeft:  canvasRect.left - documentRect.left,\n            canvasTop:   canvasRect.top  - documentRect.top,\n        })\n    }\n\n    render() {\n        const time = this.props.time\n        const loc = this.props.results.locations[time]\n        const velXY = this.props.results.velocities[time]\n        const accXY = this.props.results.accelerations[time]\n        \n        const arrowLoc = {\n            x: this.state.canvasLeft + (Math.round(loc.x * this.state.xScale)),\n            y: this.state.canvasTop  + (this.state.canvasHeight - Math.round(loc.y * this.state.yScale) - 1) \n        }\n\n        const velocity = {\n            value: Math.hypot(velXY.x, velXY.y),\n            angle: Math.atan2(velXY.x, velXY.y)\n        }\n\n        const acceleration = {\n            value: Math.hypot(accXY.x, accXY.y),\n            angle: Math.atan2(accXY.x, accXY.y)\n        }\n\n        return (\n            <>\n                <div\n                    style={{\n                        width:  \"100%\",\n                        height: \"100%\",\n                    }}\n                    ref={this.canvas_container}\n                >\n                    <canvas \n                        style={{ position: \"absolute\" }}\n                        width ={this.state.canvasWidth}\n                        height={this.state.canvasHeight}\n                        ref={this.canvas}\n                    />\n                </div>\n                {(this.props.showVelocity)?(<Arrow\n                    x={arrowLoc.x}\n                    y={arrowLoc.y}\n                    value={velocity.value*10}\n                    angle={velocity.angle}\n                    color={this.props.theme.palette.showVelocity}\n                />) : (null)}\n                {(this.props.showAcceleration)?(<Arrow\n                    x={arrowLoc.x}\n                    y={arrowLoc.y}\n                    value={acceleration.value*10}\n                    angle={acceleration.angle}\n                    color={this.props.theme.palette.showAcceleration}\n                />) : (null)}\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(Simulation);","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography         from '@material-ui/core/Typography';\nimport TextField          from '@material-ui/core/TextField';\nimport InputAdornment     from '@material-ui/core/InputAdornment';\nimport FormControlLabel   from '@material-ui/core/FormControlLabel';\nimport Checkbox           from '@material-ui/core/Checkbox';\n\nconst styles = theme => ({\n\n})\n\nclass Settings extends React.PureComponent {\n\n    render() {\n        const startAngleDeg = 180 * this.props.start.angle / Math.PI\n        return (\n            <>\n                <Typography>\n                    {this.props.maxHeight.toFixed(2)}\n                </Typography>\n                <Typography>\n                    {this.props.reach.toFixed(2)}\n                </Typography>\n                {[\n                    { label: \"Grawitacja\",         name: \"gravity\",         unit: \"m/s^2\" },\n                    { label: \"Gęstość powietrza\",  name: \"airDensity\",      unit: \"kg/m^3\" },\n                    { label: \"Współczynnik oporu\", name: \"dragCoefficient\", unit: \"\" },\n                    { label: \"Promień piłki\",      name: \"ballRadius\",      unit: \"cm\" },\n                    { label: \"Masa piłki\",         name: \"ballMass\",        unit: \"kg\" },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={this.props.constants[values.name]}\n                        onChange={this.props.changeConstant}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">{values.unit}</InputAdornment>,\n                        }}\n                    />\n                ))}\n                {[\n                    { label: \"Wysokość\",            name: \"height\",   value: this.props.start.height,   unit: \"m\" },\n                    { label: \"Prędkość początkowa\", name: \"velocity\", value: this.props.start.velocity, unit: \"m/s\" },\n                    { label: \"Kąt\",                 name: \"angle\",    value: this.props.start.angle,    unit: \"rad\" },\n                    { label: \"Kąt\",                 name: \"angleDeg\", value: startAngleDeg,             unit: <>&deg;</> },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={values.value}\n                        onChange={this.props.changeStart}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">{values.unit}</InputAdornment>,\n                        }}\n                    />\n                ))}\n                {[\n                    { label: \"Liczba iteracji\", name: \"iterationLimit\" },\n                    { label: \"Czas 1 iteracji\", name: \"timeChange\" },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={this.props[values.name]}\n                        onChange={this.props.changeSetting}\n                    />\n                ))}\n                <br />\n                {[\n                    { label: \"Prędkość\",       name: \"showVelocity\" },\n                    { label: \"Przyspieszenie\", name: \"showAcceleration\" },\n                ].map((values) => (\n                    <FormControlLabel\n                        label={values.label}\n                        key={values.name}\n                        control={\n                            <Checkbox\n                                color=\"primary\"\n                                name={values.name}\n                                checked={this.props[values.name]}\n                                onChange={this.props.changeSetting}\n                                style={{ color: this.props.theme.palette[values.name] }}\n                            />\n                        }\n                    />\n                ))}\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(Settings);","import React from 'react';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles }     from '@material-ui/core/styles';\nimport { ThemeProvider }  from '@material-ui/styles';\nimport * as colors        from '@material-ui/core/colors';\nimport { CssBaseline }    from '@material-ui/core';\nimport Paper              from '@material-ui/core/Paper';\nimport Grid               from '@material-ui/core/Grid';\nimport Slider             from '@material-ui/core/Slider';\n\nimport Simulation from './SimulationComponent'\nimport Settings   from './SettingsComponent'\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            //main: colors.grey[800],\n            main: colors.orange[400],\n        },\n        secondary: {\n            main: colors.orange[400],\n        },\n        showAcceleration: colors.cyan[400],\n        showVelocity: colors.lightGreen[\"A700\"],\n    },\n    contrastThreshold: 3,\n});\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        type: \"light\",\n        primary: {\n            main: colors.indigo[600],\n        },\n        secondary: {\n            main: colors.orange[500],\n        },\n    },\n    contrastThreshold: 3,\n})\n\nconst styles = theme => ({\n    app: {\n        height: \"100%\",\n        width:  \"100%\",\n        position: \"absolute\", \n        top:  0,\n        left: 0, \n        display: \"flex\",\n        flexFlow: \"column\",\n    },\n    container: {\n        padding: theme.spacing(2),\n        margin:  theme.spacing(2),\n        flexGrow: 1,\n    },\n    paper_container: {\n        display: \"flex\", \n        flexFlow: \"column\",\n    }\n});\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: darkTheme,\n            results: {\n                locations: [ ],\n                velocities: [ ],\n                accelerations: [ ],\n            },\n            start: {\n                height: 1,\n                velocity: 10,\n                angle: Math.PI / 4,\n            },\n            constants: {\n                gravity: 9.81,\n                airDensity: 1.225,\n                dragCoefficient: 0.5,\n                ballRadius: 1,\n                ballMass: 0.5,\n            },\n            maxHeight: 0,\n            reach: 0,\n            iterationLimit: 10000,\n            timeChange: 0.001,\n            time: 0,\n            shouldCalculate: true,\n            showVelocity: true,\n            showAcceleration: true,\n        }\n        for (let index = 0; index < 100; index++) {\n            this.state.results.locations.push({ x: 100, y: 100+index })\n        }\n    }\n\n    calculate = () => {\n        var locations     = [], \n            velocities    = [], \n            accelerations = [];\n        var reach = 0,\n            maxHeight = 0;\n\n        const constants = {\n            ...this.state.constants, \n            gravity: parseFloat(this.state.constants.gravity)\n        };\n\n        const k = 0.5 * constants.dragCoefficient * constants.airDensity * Math.pow(constants.ballRadius / 100, 2) * Math.PI / constants.ballMass\n\n        locations[0] = { x: 0, y: parseFloat(this.state.start.height) }\n        velocities[0] = { \n            x: Math.cos(this.state.start.angle) * this.state.start.velocity,\n            y: Math.sin(this.state.start.angle) * this.state.start.velocity \n        }\n\n        for(let i = 0; i < this.state.iterationLimit; i++) {\n            accelerations[i] = {\n                x: -(k * velocities[i].x * Math.sqrt(Math.pow(velocities[i].x, 2) + Math.pow(velocities[i].y, 2))),\n                y: -(k * velocities[i].y * Math.sqrt(Math.pow(velocities[i].x, 2) + Math.pow(velocities[i].y, 2)) + constants.gravity),\n            }\n\n            velocities[i + 1] = {\n                x: velocities[i].x + accelerations[i].x * this.state.timeChange,\n                y: velocities[i].y + accelerations[i].y * this.state.timeChange,\n            }\n\n            locations[i + 1] = {\n                x: locations[i].x + velocities[i].x * this.state.timeChange + accelerations[i].x * Math.pow(this.state.timeChange, 2) * 0.5,\n                y: locations[i].y + velocities[i].y * this.state.timeChange + accelerations[i].y * Math.pow(this.state.timeChange, 2) * 0.5,\n            }\n\n            if (locations[i + 1].y < 0) break\n\n            reach     = Math.max(reach,     locations[i].x)\n            maxHeight = Math.max(maxHeight, locations[i].y)\n        }\n        console.log(accelerations)\n\n        this.setState({\n            results: {\n                locations,\n                velocities,\n                accelerations,\n            },\n            reach,\n            maxHeight,\n            time: 0,\n            shouldCalculate: false,\n        })\n    }\n\n    changeConstant = (evt) => {\n        this.setState({\n            constants: { \n                ...this.state.constants,\n                [evt.target.name]: evt.target.value,\n            },\n            shouldCalculate: true,\n        })\n    }\n\n    changeStart = (evt) => {\n        let event = { ...evt }\n        if (event.target.name === \"angleDeg\") {\n            event = {\n                ...evt,\n                target: {\n                    ...evt.target,\n                    value: Math.PI * parseFloat(event.target.value) / 180,\n                    name: \"angle\",\n                }\n            }\n        }\n\n        this.setState({\n            start: { \n                ...this.state.start,\n                [event.target.name]: event.target.value,\n            },\n            shouldCalculate: true,\n        })\n    }\n\n    changeSetting = (evt) => {\n        if (evt.target.name === \"timeChange\" || evt.target.name === \"iterationLimit\") {\n            this.setState({\n                [evt.target.name]: evt.target.value,\n                shouldCalculate: true,\n            })\n        } else if (evt.target.name === \"showAcceleration\" || evt.target.name === \"showVelocity\") {\n            this.setState({\n                [evt.target.name]: evt.target.checked,\n            })\n        } else {\n            this.setState({\n                [evt.target.name]: evt.target.value,\n            })\n        }\n    }\n\n    changeTime = (evt, value) => {\n        this.setState({\n            time: value\n        })\n    }\n\n    componentWillMount() {\n        this.calculate()\n    }\n\n    componentDidUpdate() {\n        if (this.state.shouldCalculate === true) {\n            this.calculate()\n        }\n    }\n\n    render() {\n        const classes = this.props.classes\n        return (\n            <ThemeProvider theme={this.state.theme}>\n                <CssBaseline />\n                <div className={classes.app}>\n                    <Grid \n                        container\n                        style={{\n                            flexGrow: 1 \n                        }}\n                    >\n                        <Grid item xs={9} className={classes.paper_container} >\n                            <Paper \n                                className={classes.container}\n                                style={{\n                                    display: \"flex\",\n                                }}\n                            >\n                                <Simulation \n                                    showAcceleration={this.state.showAcceleration}\n                                    showVelocity={this.state.showVelocity}\n                                    results={this.state.results}\n                                    time={this.state.time}\n                                />\n                            </Paper>\n                        </Grid>\n                        <Grid item className={classes.paper_container} >\n                            <Paper \n                                className={classes.container}\n                                style={{\n                                    padding: this.props.theme.spacing(1),\n                                }}\n                            >\n                                <Slider\n                                    orientation=\"vertical\"\n                                    variant=\"secondary\"\n                                    defaultValue={30}\n                                    value={this.state.time}\n                                    min={0}\n                                    max={this.state.results.accelerations.length - 1}\n                                    onChange={this.changeTime}\n                                />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs className={classes.paper_container} >\n                            <Paper className={classes.container}>\n                                <Settings\n                                    constants={this.state.constants}\n                                    start={this.state.start}\n                                    reach={this.state.reach}\n                                    maxHeight={this.state.maxHeight}\n                                    iterationLimit={this.state.iterationLimit}\n                                    timeChange={this.state.timeChange}\n                                    showVelocity={this.state.showVelocity}\n                                    showAcceleration={this.state.showAcceleration}\n                                    changeConstant={this.changeConstant}\n                                    changeStart={this.changeStart}\n                                    changeSetting={this.changeSetting}\n                                />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </div>\n            </ThemeProvider>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}