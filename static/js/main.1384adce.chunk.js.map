{"version":3,"sources":["components/ArrowComponent.js","components/BallComponent.js","components/SimulationComponent.js","components/SettingsComponent.js","components/index.js","serviceWorker.js","index.js"],"names":["Arrow","style","position","left","top","zIndex","transformOrigin","transform","this","props","x","y","angle","Math","PI","height","value","width","backgroundColor","color","borderLeft","borderRight","borderTop","React","PureComponent","Ball","radius","borderRadius","Simulation","updateCanvas","canvas","current","state","canvasWidth","ctx","getContext","hex","theme","palette","primary","main","r","parseInt","slice","g","b","scale","i","strokeStyle","lines","canvasHeight","moveTo","lineTo","stroke","canvasData","getImageData","results","locations","forEach","loc","round","index","data","putImageData","updateDimensions","canvas_container","canvasRect","getBoundingClientRect","documentRect","document","body","reach","maxHeight","setState","clientHeight","clientWidth","canvasLeft","canvasTop","min","createRef","window","addEventListener","removeEventListener","time","velXY","velocities","accXY","accelerations","arrowLoc","velocity","hypot","atan2","acceleration","ballRadius","classes","ref","Paper","className","container","elevation","variable","unit","timeChange","map","values","Typography","key","toFixed","showVelocity","showAcceleration","showBall","withStyles","padding","spacing","margin","float","display","flexShrink","withTheme","Settings","startAngleDeg","start","startAngle","label","name","TextField","type","constants","onChange","changeConstant","InputProps","endAdornment","InputAdornment","inputProps","step","precision","changeStart","changeSetting","FormControlLabel","control","Checkbox","checked","Switch","changeTheme","darkTheme","createMuiTheme","colors","secondary","contrastThreshold","lightTheme","App","calculate","gravity","parseFloat","k","dragCoefficient","airDensity","pow","ballMass","cos","sin","iterationLimit","sqrt","max","console","log","shouldCalculate","evt","target","event","changeTime","push","ThemeProvider","CssBaseline","app","Grid","flexGrow","item","xs","paper_container","paddingTop","paddingBottom","Slider","orientation","variant","defaultValue","length","flexFlow","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1384adce.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass Arrow extends React.PureComponent {\n    render() {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    left: 0,\n                    top: 0,\n                    zIndex: 1,\n                    transformOrigin: \"2px 0px\",\n                    transform: `translate(${this.props.x - 2}px, ${this.props.y}px) rotate(${-this.props.angle - Math.PI / 2}rad)`\n                }}\n            >\n                <div \n                    style={{\n                        height: this.props.value,\n                        width: 4,\n                        backgroundColor: this.props.color,\n                    }}\n                />\n                <div \n                    style={{\n                        position: \"relative\",\n                        height: 0,\n                        width: 0,\n                        left: -8,\n                        borderLeft: \"10px solid transparent\",\n                        borderRight: \"10px solid transparent\",\n                        borderTop: `20px solid ${this.props.color}`,\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Arrow;","\nimport React from 'react';\n\n\nclass Ball extends React.PureComponent {\n    render() {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    left: -this.props.radius,\n                    top: -this.props.radius,\n                    zIndex: 2,\n                    transform: `translate(${this.props.x}px, ${this.props.y}px)`\n                }}\n            >\n                <div \n                    style={{\n                        borderRadius: \"50%\",\n                        width: this.props.radius * 2,\n                        height: this.props.radius * 2,\n                        backgroundColor: this.props.color,\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Ball;","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper      from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport Arrow from './ArrowComponent';\nimport Ball  from './BallComponent';\n\nconst styles = theme => ({\n    container: {\n        padding: theme.spacing(2),\n        margin:  theme.spacing(0),\n        float: \"right\",\n        display: \"inline-block\",\n        flexShrink: 1,\n        position: \"relative\",\n        zIndex: 10,\n    },\n})\n\nclass Simulation extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            canvasHeight: 100,\n            canvasWidth:  100,\n            canvasTop:    0,\n            canvasLeft:   0,\n        }\n        this.canvas_container = React.createRef();\n        this.canvas = React.createRef();\n    }\n    \n    componentDidMount() {\n        this.updateDimensions()\n        window.addEventListener('resize', this.updateDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n    }\n\n    componentDidUpdate() {\n        this.updateCanvas()\n    }\n\n    updateCanvas = () => {\n        this.canvas.current.width = this.state.canvasWidth\n        const ctx = this.canvas.current.getContext(\"2d\")\n        var hex = this.props.theme.palette.primary.main\n        var r = parseInt(hex.slice(1, 3), 16),\n            g = parseInt(hex.slice(3, 5), 16),\n            b = parseInt(hex.slice(5, 7), 16),\n            a = 255;\n\n        if (this.scale() > 20) {\n            ctx.strokeStyle = this.props.theme.palette.lines;\n            var i;\n            for (i = 0; i < this.state.canvasHeight; i += this.scale()) {\n                ctx.moveTo(0, this.state.canvasHeight - i);\n                ctx.lineTo(this.state.canvasWidth, this.state.canvasHeight - i);\n                ctx.stroke();\n            }\n\n            for (i = 0; i < this.state.canvasWidth; i += this.scale()) {\n                ctx.moveTo(i, 0);\n                ctx.lineTo(i, this.state.canvasHeight);\n                ctx.stroke();\n            }\n        }\n\n        var canvasData = ctx.getImageData(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n        this.props.results.locations.forEach(loc => {\n            var x = Math.round(loc.x * this.scale())\n            var y = this.state.canvasHeight - Math.round(loc.y * this.scale()) - 1\n            if (x < 0 || x > this.state.canvasWidth - 1 || y < 0 || y > this.state.canvasHeight - 1) return\n            var index = (x + y * this.state.canvasWidth) * 4;\n\n            canvasData.data[index + 0] = r;\n            canvasData.data[index + 1] = g;\n            canvasData.data[index + 2] = b;\n            canvasData.data[index + 3] = a;\n        });\n        ctx.putImageData(canvasData, 0, 0);\n    }\n\n    updateDimensions = () => {\n        const canvas = this.canvas_container.current\n        const canvasRect = canvas.getBoundingClientRect()\n        const documentRect = document.body.getBoundingClientRect()\n\n        if (this.props.reach > 0 && this.props.maxHeight > 0) {\n            this.setState({\n                canvasHeight: canvas.clientHeight - 6,\n                canvasWidth:  canvas.clientWidth - 6,\n                canvasLeft:  canvasRect.left - documentRect.left,\n                canvasTop:   canvasRect.top  - documentRect.top,\n            })\n        } else {\n            this.setState({\n                canvasHeight: canvas.clientHeight - 6,\n                canvasWidth:  canvas.clientWidth - 6,\n                canvasLeft:  canvasRect.left - documentRect.left,\n                canvasTop:   canvasRect.top  - documentRect.top,\n            })\n        }\n    }\n\n    scale = () => {\n        return Math.min((this.state.canvasWidth - 1) / this.props.reach, (this.state.canvasHeight - 1) / this.props.maxHeight, 300)\n    }\n\n    render() {\n        const time = this.props.time\n        const loc = this.props.results.locations[time]\n        const velXY = this.props.results.velocities[time]\n        const accXY = this.props.results.accelerations[time]\n        \n        const arrowLoc = {\n            x: this.state.canvasLeft + (Math.round(loc.x * this.scale())),\n            y: this.state.canvasTop  + (this.state.canvasHeight - Math.round(loc.y * this.scale()) - 1) \n        }\n\n        const velocity = {\n            value: Math.hypot(velXY.x, velXY.y),\n            angle: Math.atan2(velXY.y, velXY.x)\n        }\n\n        const acceleration = {\n            value: Math.hypot(accXY.x, accXY.y),\n            angle: Math.atan2(accXY.y, accXY.x)\n        }\n\n        const ballRadius = this.props.ballRadius\n\n        const classes = this.props.classes\n\n        return (\n            <>\n                <div\n                    style={{\n                        width:  \"100%\",\n                        height: \"100%\",\n                    }}\n                    ref={this.canvas_container}\n                >\n                    <canvas \n                        style={{ position: \"absolute\", zIndex: 0 }}\n                        width ={this.state.canvasWidth}\n                        height={this.state.canvasHeight}\n                        ref={this.canvas}\n                    />\n                    <Paper \n                        className={classes.container}\n                        elevation={5}\n                    >\n                        {[\n                            { variable: <>t</>,                      unit: \"ms\",       value: this.props.time * this.props.timeChange, },\n                            { variable: <>h<sub>max</sub></>,        unit: \"m\",        value: this.props.maxHeight, },\n                            { variable: <>x<sub>max</sub></>,        unit: \"m\",        value: this.props.reach },\n                            { variable: <>x<sub>t</sub></>,          unit: \"m\",        value: loc.x },\n                            { variable: <>h<sub>t</sub></>,          unit: \"m\",        value: loc.y },\n                            { variable: <>|v&#8407;<sub>t</sub>|</>, unit: \"m/s\",      value: velocity.value },\n                            { variable: <>&alpha;<sub>v</sub></>,    unit: <>&deg;</>, value: 180 * velocity.angle / Math.PI },\n                            { variable: <>v<sub>x</sub></>,          unit: \"m/s\",      value: velXY.x },\n                            { variable: <>v<sub>y</sub></>,          unit: \"m/s\",      value: velXY.y },\n                            { variable: <>|a&#8407;<sub>t</sub>|</>, unit: \"m/s^2\",    value: acceleration.value },\n                            { variable: <>&alpha;<sub>a</sub></>,    unit: <>&deg;</>, value: 180 * acceleration.angle / Math.PI },\n                            { variable: <>a<sub>x</sub></>,          unit: \"m/s^2\",    value: accXY.x },\n                            { variable: <>a<sub>y</sub></>,          unit: \"m/s^2\",    value: accXY.y },\n                        ].map((values, index) => (\n                            <Typography key={index}>\n                                {values.variable} = {values.value.toFixed(2)} {values.unit}\n                            </Typography>\n                        ))}\n                    </Paper>\n                </div>\n\n                {(this.props.showVelocity) ? (\n                    <Arrow\n                        x={arrowLoc.x}\n                        y={arrowLoc.y}\n                        value={velocity.value * this.scale() / 10}\n                        angle={velocity.angle}\n                        color={this.props.theme.palette.showVelocity}\n                    />\n                ) : (null)}\n                {(this.props.showAcceleration) ? (\n                    <Arrow\n                        x={arrowLoc.x}\n                        y={arrowLoc.y}\n                        value={acceleration.value * this.scale() / 10}\n                        angle={acceleration.angle}\n                        color={this.props.theme.palette.showAcceleration}\n                    />\n                ) : (null)}\n                {(this.props.showBall) ? (\n                    <Ball\n                        x={arrowLoc.x}\n                        y={arrowLoc.y}\n                        radius={ballRadius * this.scale() / 100}\n                        color={this.props.theme.palette.showBall}\n                    />\n                ) : (null)}\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(Simulation);","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Switch             from '@material-ui/core/Switch';\nimport TextField          from '@material-ui/core/TextField';\nimport InputAdornment     from '@material-ui/core/InputAdornment';\nimport FormControlLabel   from '@material-ui/core/FormControlLabel';\nimport Checkbox           from '@material-ui/core/Checkbox';\n\nconst styles = theme => ({\n\n})\n\nclass Settings extends React.PureComponent {\n\n    render() {\n        const startAngleDeg = 180 * this.props.start.angle / Math.PI\n        const startAngle    =       this.props.start.angle / Math.PI\n        return (\n            <>\n                {[\n                    { label: \"Przyspieszenie grawitacyjne\", name: \"gravity\",         unit: \"m/s^2\" },\n                    { label: \"Gęstość powietrza\",           name: \"airDensity\",      unit: \"kg/m^3\" },\n                    { label: \"Współczynnik oporu\",          name: \"dragCoefficient\", unit: \"\" },\n                    { label: \"Promień piłki\",               name: \"ballRadius\",      unit: \"cm\" },\n                    { label: \"Masa piłki\",                  name: \"ballMass\",        unit: \"kg\" },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={this.props.constants[values.name]}\n                        onChange={this.props.changeConstant}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">{values.unit}</InputAdornment>,\n                        }}\n                        inputProps={{ step: 0.1 }}\n                    />\n                ))}\n                {[\n                    { label: \"Wysokość\",            name: \"height\",   value: this.props.start.height,   precision: 0.1,  unit: \"m\" },\n                    { label: \"Prędkość początkowa\", name: \"velocity\", value: this.props.start.velocity, precision: 0.1,  unit: \"m/s\" },\n                    { label: \"Kąt\",                 name: \"angle\",    value: startAngle,                precision: 0.01, unit: <>&pi;</> },\n                    { label: \"Kąt\",                 name: \"angleDeg\", value: startAngleDeg,             precision: 0.1,  unit: <>&deg;</> },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={values.value}\n                        onChange={this.props.changeStart}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">{values.unit}</InputAdornment>,\n                        }}\n                        inputProps={{ step: values.precision }}\n                    />\n                ))}\n                {[\n                    { label: \"Liczba iteracji\", name: \"iterationLimit\", unit: \"\" },\n                    { label: \"Czas 1 iteracji\", name: \"timeChange\",     unit: \"ms\" },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={this.props[values.name]}\n                        onChange={this.props.changeSetting}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">{values.unit}</InputAdornment>,\n                        }}\n                    />\n                ))}\n                <br />\n                {[\n                    { label: \"Prędkość\",       name: \"showVelocity\" },\n                    { label: \"Przyspieszenie\", name: \"showAcceleration\" },\n                    { label: \"Piłka\",          name: \"showBall\" },\n                ].map((values) => (\n                    <FormControlLabel\n                        label={values.label}\n                        key={values.name}\n                        control={\n                            <Checkbox\n                                color=\"primary\"\n                                name={values.name}\n                                checked={this.props[values.name]}\n                                onChange={this.props.changeSetting}\n                                style={{ color: this.props.theme.palette[values.name] }}\n                            />\n                        }\n                    />\n                ))}\n\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={this.props.theme.palette.type === \"dark\"}\n                            onChange={this.props.changeTheme}\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Dark mode <3\"\n                />\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(Settings);","import React from 'react';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles }     from '@material-ui/core/styles';\nimport { ThemeProvider }  from '@material-ui/styles';\nimport * as colors        from '@material-ui/core/colors';\nimport { CssBaseline }    from '@material-ui/core';\nimport Paper              from '@material-ui/core/Paper';\nimport Grid               from '@material-ui/core/Grid';\nimport Slider             from '@material-ui/core/Slider';\n\nimport Simulation from './SimulationComponent'\nimport Settings   from './SettingsComponent'\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            //main: colors.grey[800],\n            main: colors.orange[400],\n        },\n        secondary: {\n            main: colors.orange[400],\n        },\n        showAcceleration: colors.cyan[400],\n        showVelocity: colors.lightGreen[\"A700\"],\n        showBall: colors.orange[\"A700\"],\n        lines: colors.grey[700],\n    },\n    contrastThreshold: 3,\n});\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        type: \"light\",\n        primary: {\n            main: colors.indigo[600],\n        },\n        secondary: {\n            main: colors.orange[500],\n        },\n        showAcceleration: colors.cyan[400],\n        showVelocity: colors.lightGreen[\"A700\"],\n        showBall: colors.orange[\"A700\"],\n        lines: colors.grey[300],\n    },\n    contrastThreshold: 3,\n})\n\nconst styles = theme => ({\n    app: {\n        height: \"100%\",\n        width:  \"100%\",\n        position: \"absolute\", \n        top:  0,\n        left: 0, \n        display: \"flex\",\n        flexFlow: \"column\",\n    },\n    container: {\n        padding: theme.spacing(2),\n        margin:  theme.spacing(2),\n        flexGrow: 1,\n    },\n    paper_container: {\n        display: \"flex\", \n        flexFlow: \"column\",\n    }\n});\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: darkTheme,\n            results: {\n                locations: [ ],\n                velocities: [ ],\n                accelerations: [ ],\n            },\n            start: {\n                height: 1,\n                velocity: 40,\n                angle: Math.PI / 4,\n            },\n            constants: {\n                gravity: 9.81,\n                airDensity: 1.225,\n                dragCoefficient: 0.5,\n                ballRadius: 30,\n                ballMass: 0.5,\n            },\n            maxHeight: 0,\n            reach: 0,\n            iterationLimit: 10000,\n            timeChange: 1,\n            time: 0,\n            shouldCalculate: true,\n            showVelocity: true,\n            showAcceleration: true,\n            showBall: true,\n        }\n        for (let index = 0; index < 100; index++) {\n            this.state.results.locations.push({ x: 100, y: 100+index })\n        }\n    }\n\n    calculate = () => {\n        var locations     = [], \n            velocities    = [], \n            accelerations = [];\n        var reach = 0,\n            maxHeight = 0;\n\n        const constants = {\n            ...this.state.constants, \n            gravity: parseFloat(this.state.constants.gravity)\n        };\n\n        const k = 0.5 * constants.dragCoefficient * constants.airDensity * Math.pow(constants.ballRadius / 100, 2) * Math.PI / constants.ballMass\n\n        const timeChange = this.state.timeChange / 1000\n\n        locations[0] = { x: 0, y: parseFloat(this.state.start.height) }\n        velocities[0] = { \n            x: Math.cos(this.state.start.angle) * this.state.start.velocity,\n            y: Math.sin(this.state.start.angle) * this.state.start.velocity \n        }\n\n        if (this.state.iterationLimit < 2) return\n\n        for(let i = 0; i < this.state.iterationLimit; i++) {\n            accelerations[i] = {\n                x: -(k * velocities[i].x * Math.sqrt(Math.pow(velocities[i].x, 2) + Math.pow(velocities[i].y, 2))),\n                y: -(k * velocities[i].y * Math.sqrt(Math.pow(velocities[i].x, 2) + Math.pow(velocities[i].y, 2)) + constants.gravity),\n            }\n\n            velocities[i + 1] = {\n                x: velocities[i].x + accelerations[i].x * timeChange,\n                y: velocities[i].y + accelerations[i].y * timeChange,\n            }\n\n            locations[i + 1] = {\n                x: locations[i].x + velocities[i].x * timeChange + accelerations[i].x * Math.pow(timeChange, 2) * 0.5,\n                y: locations[i].y + velocities[i].y * timeChange + accelerations[i].y * Math.pow(timeChange, 2) * 0.5,\n            }\n\n            if (locations[i + 1].y < 0) break\n\n            reach     = Math.max(reach,     locations[i].x)\n            maxHeight = Math.max(maxHeight, locations[i].y)\n        }\n        console.log(accelerations)\n\n        this.setState({\n            results: {\n                locations,\n                velocities,\n                accelerations,\n            },\n            reach,\n            maxHeight,\n            time: 0,\n            shouldCalculate: false,\n        })\n    }\n\n    changeConstant = (evt) => {\n        this.setState({\n            constants: { \n                ...this.state.constants,\n                [evt.target.name]: evt.target.value,\n            },\n            shouldCalculate: true,\n        })\n    }\n\n    changeStart = (evt) => {\n        let event = { ...evt }\n        if (event.target.name === \"angleDeg\") {\n            event = {\n                ...evt,\n                target: {\n                    ...evt.target,\n                    value: Math.PI * ((parseFloat(event.target.value) / 180) % 0.5),\n                    name: \"angle\",\n                }\n            }\n        } else if (event.target.name === \"angle\") {\n            event = {\n                ...evt,\n                target: {\n                    ...evt.target,\n                    value: Math.PI * (parseFloat(event.target.value) % 0.5),\n                    name: \"angle\",\n                }\n            }\n        }\n\n        this.setState({\n            start: { \n                ...this.state.start,\n                [event.target.name]: event.target.value,\n            },\n            shouldCalculate: true,\n        })\n    }\n\n    changeSetting = (evt) => {\n        if (evt.target.name === \"timeChange\" || evt.target.name === \"iterationLimit\") {\n            this.setState({\n                [evt.target.name]: evt.target.value,\n                shouldCalculate: true,\n            })\n        } else if (evt.target.name === \"showAcceleration\" || \n                   evt.target.name === \"showVelocity\" ||\n                   evt.target.name === \"showBall\") {\n            this.setState({\n                [evt.target.name]: evt.target.checked,\n            })\n        } else {\n            this.setState({\n                [evt.target.name]: evt.target.value,\n            })\n        }\n    }\n\n    changeTime = (evt, value) => {\n        this.setState({\n            time: value\n        })\n    }\n\n    changeTheme = () => {\n        if (this.state.theme.palette.type === \"dark\") {\n            this.setState({\n                theme: lightTheme\n            })\n        } else {\n            this.setState({\n                theme: darkTheme\n            })\n        }\n    }\n\n    componentWillMount() {\n        this.calculate()\n    }\n\n    componentDidUpdate() {\n        if (this.state.shouldCalculate === true) {\n            this.calculate()\n        }\n    }\n\n    render() {\n        const classes = this.props.classes\n        return (\n            <ThemeProvider theme={this.state.theme}>\n                <CssBaseline />\n                <div className={classes.app}>\n                    <Grid \n                        container\n                        style={{\n                            flexGrow: 1 \n                        }}\n                    >\n                        <Grid item xs={9} className={classes.paper_container} >\n                            <Paper \n                                className={classes.container}\n                                style={{\n                                    display: \"flex\",\n                                }}\n                            >\n                                <Simulation \n                                    results={this.state.results}\n                                    time={this.state.time}\n                                    timeChange={this.state.timeChange}\n                                    reach={this.state.reach}\n                                    maxHeight={this.state.maxHeight}\n                                    ballRadius={this.state.constants.ballRadius}\n                                    showAcceleration={this.state.showAcceleration}\n                                    showVelocity={this.state.showVelocity}\n                                    showBall={this.state.showBall}\n                                />\n                            </Paper>\n                        </Grid>\n                        <Grid item className={classes.paper_container} >\n                            <Paper \n                                className={classes.container}\n                                style={{\n                                    padding:       this.props.theme.spacing(1),\n                                    paddingTop:    this.props.theme.spacing(3),\n                                    paddingBottom: this.props.theme.spacing(3),\n                                }}\n                            >\n                                <Slider\n                                    orientation=\"vertical\"\n                                    variant=\"secondary\"\n                                    defaultValue={30}\n                                    value={this.state.time}\n                                    min={0}\n                                    max={this.state.results.accelerations.length - 1}\n                                    onChange={this.changeTime}\n                                />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs className={classes.paper_container} >\n                            <Paper className={classes.container}>\n                                <Settings\n                                    constants={this.state.constants}\n                                    start={this.state.start}\n                                    reach={this.state.reach}\n                                    maxHeight={this.state.maxHeight}\n                                    iterationLimit={this.state.iterationLimit}\n                                    timeChange={this.state.timeChange}\n                                    showVelocity={this.state.showVelocity}\n                                    showAcceleration={this.state.showAcceleration}\n                                    showBall={this.state.showBall}\n                                    changeConstant={this.changeConstant}\n                                    changeStart={this.changeStart}\n                                    changeSetting={this.changeSetting}\n                                    changeTheme={this.changeTheme}\n                                />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </div>\n            </ThemeProvider>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}