{"version":3,"sources":["components/ArrowComponent.js","components/BallComponent.js","components/SimulationComponent.js","components/SettingsComponent.js","components/index.js","serviceWorker.js","index.js"],"names":["Arrow","style","position","left","top","transformOrigin","transform","this","props","x","y","angle","Math","PI","height","value","width","backgroundColor","color","borderLeft","borderRight","borderTop","React","PureComponent","Ball","radius","borderRadius","Simulation","updateCanvas","canvas","current","state","canvasWidth","ctx","getContext","hex","theme","palette","secondary","main","r","parseInt","slice","g","b","i","canvasHeight","scale","moveTo","lineTo","stroke","canvasData","getImageData","results","locations","forEach","loc","round","index","data","putImageData","updateDimensions","canvas_container","canvasRect","getBoundingClientRect","documentRect","document","body","reach","maxHeight","setState","clientHeight","clientWidth","canvasLeft","canvasTop","min","createRef","window","addEventListener","removeEventListener","time","velXY","velocities","accXY","accelerations","arrowLoc","velocity","hypot","atan2","acceleration","ballRadius","classes","ref","Paper","className","container","elevation","variable","unit","timeChange","map","values","Typography","key","toFixed","showVelocity","showAcceleration","showBall","withStyles","padding","spacing","margin","float","display","flexShrink","withTheme","Settings","startAngleDeg","start","startAngle","label","name","TextField","type","constants","onChange","changeConstant","InputProps","endAdornment","InputAdornment","inputProps","step","precision","changeStart","changeSetting","FormControlLabel","control","Checkbox","checked","darkTheme","createMuiTheme","primary","colors","contrastThreshold","App","calculate","gravity","parseFloat","k","dragCoefficient","airDensity","pow","ballMass","cos","sin","iterationLimit","sqrt","max","console","log","shouldCalculate","evt","target","event","changeTime","push","ThemeProvider","CssBaseline","app","Grid","flexGrow","item","xs","paper_container","paddingTop","paddingBottom","Slider","orientation","variant","defaultValue","length","flexFlow","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78f50445.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass Arrow extends React.PureComponent {\n    render() {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    left: 0,\n                    top: 0,\n                    transformOrigin: \"2px 0px\",\n                    transform: `translate(${this.props.x - 2}px, ${this.props.y}px) rotate(${-this.props.angle - Math.PI / 2}rad)`\n                }}\n            >\n                <div \n                    style={{\n                        height: this.props.value,\n                        width: 4,\n                        backgroundColor: this.props.color,\n                    }}\n                />\n                <div \n                    style={{\n                        position: \"relative\",\n                        height: 0,\n                        width: 0,\n                        left: -8,\n                        borderLeft: \"10px solid transparent\",\n                        borderRight: \"10px solid transparent\",\n                        borderTop: `20px solid ${this.props.color}`,\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Arrow;","\nimport React from 'react';\n\n\nclass Ball extends React.PureComponent {\n    render() {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    left: -this.props.radius,\n                    top: -this.props.radius,\n                    transform: `translate(${this.props.x}px, ${this.props.y}px)`\n                }}\n            >\n                <div \n                    style={{\n                        borderRadius: \"50%\",\n                        width: this.props.radius * 2,\n                        height: this.props.radius * 2,\n                        backgroundColor: this.props.color,\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Ball;","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper      from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport Arrow from './ArrowComponent';\nimport Ball  from './BallComponent';\n\nconst styles = theme => ({\n    container: {\n        padding: theme.spacing(2),\n        margin:  theme.spacing(0),\n        float: \"right\",\n        display: \"inline-block\",\n        flexShrink: 1,\n    },\n})\n\nclass Simulation extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            canvasHeight: 100,\n            canvasWidth:  100,\n            canvasTop:    0,\n            canvasLeft:   0,\n        }\n        this.canvas_container = React.createRef();\n        this.canvas = React.createRef();\n    }\n    \n    componentDidMount() {\n        this.updateDimensions()\n        window.addEventListener('resize', this.updateDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n    }\n\n    componentDidUpdate() {\n        this.updateCanvas()\n    }\n\n    updateCanvas = () => {\n        this.canvas.current.width = this.state.canvasWidth\n        const ctx = this.canvas.current.getContext(\"2d\")\n        var hex = this.props.theme.palette.secondary.main\n        var r = parseInt(hex.slice(1, 3), 16),\n            g = parseInt(hex.slice(3, 5), 16),\n            b = parseInt(hex.slice(5, 7), 16),\n            a = 255;\n\n        for (var i = 0; i < this.state.canvasHeight; i += this.scale()) {\n            ctx.moveTo(0, this.state.canvasHeight - i);\n            ctx.lineTo(this.state.canvasWidth, this.state.canvasHeight - i);\n            ctx.stroke();\n        }\n\n        for (var i = 0; i < this.state.canvasWidth; i += this.scale()) {\n            ctx.moveTo(i, 0);\n            ctx.lineTo(i, this.state.canvasHeight);\n            ctx.stroke();\n        }\n\n        var canvasData = ctx.getImageData(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n        this.props.results.locations.forEach(loc => {\n            var x = Math.round(loc.x * this.scale())\n            var y = this.state.canvasHeight - Math.round(loc.y * this.scale()) - 1\n            if (x < 0 || x > this.state.canvasWidth - 1 || y < 0 || y > this.state.canvasHeight - 1) return\n            var index = (x + y * this.state.canvasWidth) * 4;\n\n            canvasData.data[index + 0] = r;\n            canvasData.data[index + 1] = g;\n            canvasData.data[index + 2] = b;\n            canvasData.data[index + 3] = a;\n        });\n        ctx.putImageData(canvasData, 0, 0);\n    }\n\n    updateDimensions = () => {\n        const canvas = this.canvas_container.current\n        const canvasRect = canvas.getBoundingClientRect()\n        const documentRect = document.body.getBoundingClientRect()\n\n        if (this.props.reach > 0 && this.props.maxHeight > 0) {\n            this.setState({\n                canvasHeight: canvas.clientHeight - 6,\n                canvasWidth:  canvas.clientWidth - 6,\n                canvasLeft:  canvasRect.left - documentRect.left,\n                canvasTop:   canvasRect.top  - documentRect.top,\n            })\n        } else {\n            this.setState({\n                canvasHeight: canvas.clientHeight - 6,\n                canvasWidth:  canvas.clientWidth - 6,\n                canvasLeft:  canvasRect.left - documentRect.left,\n                canvasTop:   canvasRect.top  - documentRect.top,\n            })\n        }\n    }\n\n    scale = () => {\n        return Math.min((this.state.canvasWidth - 1) / this.props.reach, (this.state.canvasHeight - 1) / this.props.maxHeight, 300)\n    }\n\n    render() {\n        const time = this.props.time\n        const loc = this.props.results.locations[time]\n        const velXY = this.props.results.velocities[time]\n        const accXY = this.props.results.accelerations[time]\n        \n        const arrowLoc = {\n            x: this.state.canvasLeft + (Math.round(loc.x * this.scale())),\n            y: this.state.canvasTop  + (this.state.canvasHeight - Math.round(loc.y * this.scale()) - 1) \n        }\n\n        const velocity = {\n            value: Math.hypot(velXY.x, velXY.y),\n            angle: Math.atan2(velXY.y, velXY.x)\n        }\n\n        const acceleration = {\n            value: Math.hypot(accXY.x, accXY.y),\n            angle: Math.atan2(accXY.y, accXY.x)\n        }\n\n        const ballRadius = this.props.ballRadius\n\n        const classes = this.props.classes\n\n        return (\n            <>\n                <div\n                    style={{\n                        width:  \"100%\",\n                        height: \"100%\",\n                    }}\n                    ref={this.canvas_container}\n                >\n                    <canvas \n                        style={{ position: \"absolute\" }}\n                        width ={this.state.canvasWidth}\n                        height={this.state.canvasHeight}\n                        ref={this.canvas}\n                    />\n                    <Paper \n                        className={classes.container}\n                        elevation={5}\n                    >\n                        {[\n                            { variable: <>t</>,                      unit: \"ms\",       value: this.props.time * this.props.timeChange, },\n                            { variable: <>h<sub>max</sub></>,        unit: \"m\",        value: this.props.maxHeight, },\n                            { variable: <>x<sub>max</sub></>,        unit: \"m\",        value: this.props.reach },\n                            { variable: <>x<sub>t</sub></>,          unit: \"m\",        value: loc.x },\n                            { variable: <>h<sub>t</sub></>,          unit: \"m\",        value: loc.y },\n                            { variable: <>|v&#8407;<sub>t</sub>|</>, unit: \"m/s\",      value: velocity.value },\n                            { variable: <>&alpha;<sub>v</sub></>,    unit: <>&deg;</>, value: 180 * velocity.angle / Math.PI },\n                            { variable: <>v<sub>x</sub></>,          unit: \"m/s\",      value: velXY.x },\n                            { variable: <>v<sub>y</sub></>,          unit: \"m/s\",      value: velXY.y },\n                            { variable: <>|a&#8407;<sub>t</sub>|</>, unit: \"m/s^2\",    value: acceleration.value },\n                            { variable: <>&alpha;<sub>a</sub></>,    unit: <>&deg;</>, value: 180 * acceleration.angle / Math.PI },\n                            { variable: <>a<sub>x</sub></>,          unit: \"m/s^2\",    value: accXY.x },\n                            { variable: <>a<sub>y</sub></>,          unit: \"m/s^2\",    value: accXY.y },\n                        ].map((values, index) => (\n                            <Typography key={index}>\n                                {values.variable} = {values.value.toFixed(2)} {values.unit}\n                            </Typography>\n                        ))}\n                    </Paper>\n                </div>\n\n                {(this.props.showVelocity) ? (\n                    <Arrow\n                        x={arrowLoc.x}\n                        y={arrowLoc.y}\n                        value={velocity.value * this.scale() / 10}\n                        angle={velocity.angle}\n                        color={this.props.theme.palette.showVelocity}\n                    />\n                ) : (null)}\n                {(this.props.showAcceleration) ? (\n                    <Arrow\n                        x={arrowLoc.x}\n                        y={arrowLoc.y}\n                        value={acceleration.value * this.scale() / 10}\n                        angle={acceleration.angle}\n                        color={this.props.theme.palette.showAcceleration}\n                    />\n                ) : (null)}\n                {(this.props.showBall) ? (\n                    <Ball\n                        x={arrowLoc.x}\n                        y={arrowLoc.y}\n                        radius={ballRadius * this.scale() / 100}\n                        color={this.props.theme.palette.showBall}\n                    />\n                ) : (null)}\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(Simulation);","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography         from '@material-ui/core/Typography';\nimport TextField          from '@material-ui/core/TextField';\nimport InputAdornment     from '@material-ui/core/InputAdornment';\nimport FormControlLabel   from '@material-ui/core/FormControlLabel';\nimport Checkbox           from '@material-ui/core/Checkbox';\n\nconst styles = theme => ({\n\n})\n\nclass Settings extends React.PureComponent {\n\n    render() {\n        const startAngleDeg = 180 * this.props.start.angle / Math.PI\n        const startAngle    =       this.props.start.angle / Math.PI\n        return (\n            <>\n                {[\n                    { label: \"Grawitacja\",         name: \"gravity\",         unit: \"m/s^2\" },\n                    { label: \"Gęstość powietrza\",  name: \"airDensity\",      unit: \"kg/m^3\" },\n                    { label: \"Współczynnik oporu\", name: \"dragCoefficient\", unit: \"\" },\n                    { label: \"Promień piłki\",      name: \"ballRadius\",      unit: \"cm\" },\n                    { label: \"Masa piłki\",         name: \"ballMass\",        unit: \"kg\" },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={this.props.constants[values.name]}\n                        onChange={this.props.changeConstant}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">{values.unit}</InputAdornment>,\n                        }}\n                        inputProps={{ step: 0.1 }}\n                    />\n                ))}\n                {[\n                    { label: \"Wysokość\",            name: \"height\",   value: this.props.start.height,   precision: 0.1,  unit: \"m\" },\n                    { label: \"Prędkość początkowa\", name: \"velocity\", value: this.props.start.velocity, precision: 0.1,  unit: \"m/s\" },\n                    { label: \"Kąt\",                 name: \"angle\",    value: startAngle,                precision: 0.01, unit: <>&pi;</> },\n                    { label: \"Kąt\",                 name: \"angleDeg\", value: startAngleDeg,             precision: 0.1,  unit: <>&deg;</> },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={values.value}\n                        onChange={this.props.changeStart}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">{values.unit}</InputAdornment>,\n                        }}\n                        inputProps={{ step: values.precision }}\n                    />\n                ))}\n                {[\n                    { label: \"Liczba iteracji\", name: \"iterationLimit\", unit: \"\" },\n                    { label: \"Czas 1 iteracji\", name: \"timeChange\",     unit: \"ms\" },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={this.props[values.name]}\n                        onChange={this.props.changeSetting}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">{values.unit}</InputAdornment>,\n                        }}\n                    />\n                ))}\n                <br />\n                {[\n                    { label: \"Prędkość\",       name: \"showVelocity\" },\n                    { label: \"Przyspieszenie\", name: \"showAcceleration\" },\n                    { label: \"Piłka\",          name: \"showBall\" },\n                ].map((values) => (\n                    <FormControlLabel\n                        label={values.label}\n                        key={values.name}\n                        control={\n                            <Checkbox\n                                color=\"primary\"\n                                name={values.name}\n                                checked={this.props[values.name]}\n                                onChange={this.props.changeSetting}\n                                style={{ color: this.props.theme.palette[values.name] }}\n                            />\n                        }\n                    />\n                ))}\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(Settings);","import React from 'react';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles }     from '@material-ui/core/styles';\nimport { ThemeProvider }  from '@material-ui/styles';\nimport * as colors        from '@material-ui/core/colors';\nimport { CssBaseline }    from '@material-ui/core';\nimport Paper              from '@material-ui/core/Paper';\nimport Grid               from '@material-ui/core/Grid';\nimport Slider             from '@material-ui/core/Slider';\n\nimport Simulation from './SimulationComponent'\nimport Settings   from './SettingsComponent'\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            //main: colors.grey[800],\n            main: colors.orange[400],\n        },\n        secondary: {\n            main: colors.orange[400],\n        },\n        showAcceleration: colors.cyan[400],\n        showVelocity: colors.lightGreen[\"A700\"],\n        showBall: colors.orange[\"A700\"],\n    },\n    contrastThreshold: 3,\n});\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        type: \"light\",\n        primary: {\n            main: colors.indigo[600],\n        },\n        secondary: {\n            main: colors.orange[500],\n        },\n    },\n    contrastThreshold: 3,\n})\n\nconst styles = theme => ({\n    app: {\n        height: \"100%\",\n        width:  \"100%\",\n        position: \"absolute\", \n        top:  0,\n        left: 0, \n        display: \"flex\",\n        flexFlow: \"column\",\n    },\n    container: {\n        padding: theme.spacing(2),\n        margin:  theme.spacing(2),\n        flexGrow: 1,\n    },\n    paper_container: {\n        display: \"flex\", \n        flexFlow: \"column\",\n    }\n});\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: darkTheme,\n            results: {\n                locations: [ ],\n                velocities: [ ],\n                accelerations: [ ],\n            },\n            start: {\n                height: 1,\n                velocity: 40,\n                angle: Math.PI / 4,\n            },\n            constants: {\n                gravity: 9.81,\n                airDensity: 1.225,\n                dragCoefficient: 0.5,\n                ballRadius: 30,\n                ballMass: 0.5,\n            },\n            maxHeight: 0,\n            reach: 0,\n            iterationLimit: 10000,\n            timeChange: 1,\n            time: 0,\n            shouldCalculate: true,\n            showVelocity: true,\n            showAcceleration: true,\n            showBall: true,\n        }\n        for (let index = 0; index < 100; index++) {\n            this.state.results.locations.push({ x: 100, y: 100+index })\n        }\n    }\n\n    calculate = () => {\n        var locations     = [], \n            velocities    = [], \n            accelerations = [];\n        var reach = 0,\n            maxHeight = 0;\n\n        const constants = {\n            ...this.state.constants, \n            gravity: parseFloat(this.state.constants.gravity)\n        };\n\n        const k = 0.5 * constants.dragCoefficient * constants.airDensity * Math.pow(constants.ballRadius / 100, 2) * Math.PI / constants.ballMass\n\n        const timeChange = this.state.timeChange / 1000\n\n        locations[0] = { x: 0, y: parseFloat(this.state.start.height) }\n        velocities[0] = { \n            x: Math.cos(this.state.start.angle) * this.state.start.velocity,\n            y: Math.sin(this.state.start.angle) * this.state.start.velocity \n        }\n\n        if (this.state.iterationLimit < 2) return\n\n        for(let i = 0; i < this.state.iterationLimit; i++) {\n            accelerations[i] = {\n                x: -(k * velocities[i].x * Math.sqrt(Math.pow(velocities[i].x, 2) + Math.pow(velocities[i].y, 2))),\n                y: -(k * velocities[i].y * Math.sqrt(Math.pow(velocities[i].x, 2) + Math.pow(velocities[i].y, 2)) + constants.gravity),\n            }\n\n            velocities[i + 1] = {\n                x: velocities[i].x + accelerations[i].x * timeChange,\n                y: velocities[i].y + accelerations[i].y * timeChange,\n            }\n\n            locations[i + 1] = {\n                x: locations[i].x + velocities[i].x * timeChange + accelerations[i].x * Math.pow(timeChange, 2) * 0.5,\n                y: locations[i].y + velocities[i].y * timeChange + accelerations[i].y * Math.pow(timeChange, 2) * 0.5,\n            }\n\n            if (locations[i + 1].y < 0) break\n\n            reach     = Math.max(reach,     locations[i].x)\n            maxHeight = Math.max(maxHeight, locations[i].y)\n        }\n        console.log(accelerations)\n\n        this.setState({\n            results: {\n                locations,\n                velocities,\n                accelerations,\n            },\n            reach,\n            maxHeight,\n            time: 0,\n            shouldCalculate: false,\n        })\n    }\n\n    changeConstant = (evt) => {\n        this.setState({\n            constants: { \n                ...this.state.constants,\n                [evt.target.name]: evt.target.value,\n            },\n            shouldCalculate: true,\n        })\n    }\n\n    changeStart = (evt) => {\n        let event = { ...evt }\n        if (event.target.name === \"angleDeg\") {\n            event = {\n                ...evt,\n                target: {\n                    ...evt.target,\n                    value: Math.PI * ((parseFloat(event.target.value) / 180) % 0.5),\n                    name: \"angle\",\n                }\n            }\n        } else if (event.target.name === \"angle\") {\n            event = {\n                ...evt,\n                target: {\n                    ...evt.target,\n                    value: Math.PI * (parseFloat(event.target.value) % 0.5),\n                    name: \"angle\",\n                }\n            }\n        }\n\n        this.setState({\n            start: { \n                ...this.state.start,\n                [event.target.name]: event.target.value,\n            },\n            shouldCalculate: true,\n        })\n    }\n\n    changeSetting = (evt) => {\n        if (evt.target.name === \"timeChange\" || evt.target.name === \"iterationLimit\") {\n            this.setState({\n                [evt.target.name]: evt.target.value,\n                shouldCalculate: true,\n            })\n        } else if (evt.target.name === \"showAcceleration\" || \n                   evt.target.name === \"showVelocity\" ||\n                   evt.target.name === \"showBall\") {\n            this.setState({\n                [evt.target.name]: evt.target.checked,\n            })\n        } else {\n            this.setState({\n                [evt.target.name]: evt.target.value,\n            })\n        }\n    }\n\n    changeTime = (evt, value) => {\n        this.setState({\n            time: value\n        })\n    }\n\n    componentWillMount() {\n        this.calculate()\n    }\n\n    componentDidUpdate() {\n        if (this.state.shouldCalculate === true) {\n            this.calculate()\n        }\n    }\n\n    render() {\n        const classes = this.props.classes\n        return (\n            <ThemeProvider theme={this.state.theme}>\n                <CssBaseline />\n                <div className={classes.app}>\n                    <Grid \n                        container\n                        style={{\n                            flexGrow: 1 \n                        }}\n                    >\n                        <Grid item xs={9} className={classes.paper_container} >\n                            <Paper \n                                className={classes.container}\n                                style={{\n                                    display: \"flex\",\n                                }}\n                            >\n                                <Simulation \n                                    results={this.state.results}\n                                    time={this.state.time}\n                                    timeChange={this.state.timeChange}\n                                    reach={this.state.reach}\n                                    maxHeight={this.state.maxHeight}\n                                    ballRadius={this.state.constants.ballRadius}\n                                    showAcceleration={this.state.showAcceleration}\n                                    showVelocity={this.state.showVelocity}\n                                    showBall={this.state.showBall}\n                                />\n                            </Paper>\n                        </Grid>\n                        <Grid item className={classes.paper_container} >\n                            <Paper \n                                className={classes.container}\n                                style={{\n                                    padding:       this.props.theme.spacing(1),\n                                    paddingTop:    this.props.theme.spacing(3),\n                                    paddingBottom: this.props.theme.spacing(3),\n                                }}\n                            >\n                                <Slider\n                                    orientation=\"vertical\"\n                                    variant=\"secondary\"\n                                    defaultValue={30}\n                                    value={this.state.time}\n                                    min={0}\n                                    max={this.state.results.accelerations.length - 1}\n                                    onChange={this.changeTime}\n                                />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs className={classes.paper_container} >\n                            <Paper className={classes.container}>\n                                <Settings\n                                    constants={this.state.constants}\n                                    start={this.state.start}\n                                    reach={this.state.reach}\n                                    maxHeight={this.state.maxHeight}\n                                    iterationLimit={this.state.iterationLimit}\n                                    timeChange={this.state.timeChange}\n                                    showVelocity={this.state.showVelocity}\n                                    showAcceleration={this.state.showAcceleration}\n                                    showBall={this.state.showBall}\n                                    changeConstant={this.changeConstant}\n                                    changeStart={this.changeStart}\n                                    changeSetting={this.changeSetting}\n                                />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </div>\n            </ThemeProvider>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}