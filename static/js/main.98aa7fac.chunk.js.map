{"version":3,"sources":["components/ArrowComponent.js","components/BallComponent.js","components/SimulationComponent.js","components/SettingsComponent.js","components/index.js","serviceWorker.js","index.js"],"names":["Arrow","style","position","left","top","zIndex","transformOrigin","transform","this","props","x","y","angle","Math","PI","height","value","width","backgroundColor","color","borderLeft","borderRight","borderTop","React","PureComponent","Ball","radius","borderRadius","Simulation","updateCanvas","canvas","current","state","canvasWidth","ctx","getContext","hex","theme","palette","primary","main","r","parseInt","slice","g","b","scale","i","strokeStyle","lines","canvasHeight","moveTo","lineTo","stroke","canvasData","getImageData","results","locations","forEach","loc","round","index","data","putImageData","updateDimensions","canvas_container","canvasRect","getBoundingClientRect","documentRect","document","body","setState","clientHeight","clientWidth","canvasLeft","canvasTop","min","reach","maxHeight","createRef","window","addEventListener","removeEventListener","prevprops","time","accelerations","length","velXY","velocities","accXY","arrowLoc","velocity","hypot","atan2","acceleration","ballRadius","classes","ref","Paper","className","container","elevation","variable","unit","timeChange","map","values","Typography","key","toFixed","showVelocity","showAcceleration","showBall","withStyles","padding","spacing","margin","float","display","flexShrink","withTheme","Settings","startAngleDeg","start","startAngle","label","name","TextField","type","constants","onChange","changeConstant","InputProps","endAdornment","InputAdornment","inputProps","step","precision","changeStart","changeSetting","FormControlLabel","control","Checkbox","checked","Switch","changeTheme","darkTheme","createMuiTheme","colors","secondary","contrastThreshold","lightTheme","App","calculate","gravity","parseFloat","k","dragCoefficient","airDensity","pow","ballMass","cos","sin","iterationLimit","sqrt","max","console","log","shouldCalculate","evt","animation","target","event","changeTime","result","animateInterval","clearInterval","setInterval","animationTick","tickTime","push","ThemeProvider","CssBaseline","app","Grid","flexGrow","item","xs","paper_container","paddingTop","paddingBottom","Slider","orientation","variant","defaultValue","IconButton","aria-label","onClick","flexFlow","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98aa7fac.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass Arrow extends React.PureComponent {\n    render() {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    left: 0,\n                    top: 0,\n                    zIndex: 1,\n                    transformOrigin: \"2px 0px\",\n                    transform: `translate(${this.props.x - 2}px, ${this.props.y}px) rotate(${-this.props.angle - Math.PI / 2}rad)`\n                }}\n            >\n                <div \n                    style={{\n                        height: this.props.value,\n                        width: 4,\n                        backgroundColor: this.props.color,\n                    }}\n                />\n                <div \n                    style={{\n                        position: \"relative\",\n                        height: 0,\n                        width: 0,\n                        left: -8,\n                        borderLeft: \"10px solid transparent\",\n                        borderRight: \"10px solid transparent\",\n                        borderTop: `20px solid ${this.props.color}`,\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Arrow;","\nimport React from 'react';\n\n\nclass Ball extends React.PureComponent {\n    render() {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    left: -this.props.radius,\n                    top: -this.props.radius,\n                    zIndex: 2,\n                    transform: `translate(${this.props.x}px, ${this.props.y}px)`\n                }}\n            >\n                <div \n                    style={{\n                        borderRadius: \"50%\",\n                        width: this.props.radius * 2,\n                        height: this.props.radius * 2,\n                        backgroundColor: this.props.color,\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Ball;","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper      from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport Arrow from './ArrowComponent';\nimport Ball  from './BallComponent';\n\nconst styles = theme => ({\n    container: {\n        padding: theme.spacing(2),\n        margin:  theme.spacing(0),\n        float: \"right\",\n        display: \"inline-block\",\n        flexShrink: 1,\n        position: \"relative\",\n        zIndex: 10,\n    },\n})\n\nclass Simulation extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            canvasHeight: 100,\n            canvasWidth:  100,\n            canvasTop:    0,\n            canvasLeft:   0,\n        }\n        this.canvas_container = React.createRef();\n        this.canvas = React.createRef();\n    }\n    \n    componentDidMount() {\n        this.updateDimensions()\n        window.addEventListener('resize', this.updateDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n    }\n\n    componentDidUpdate(prevprops) {\n        if (this.props.time === prevprops.time || this.props.time === this.props.results.accelerations.length - 1)\n            this.updateCanvas()\n    }\n\n    updateCanvas = () => {\n        this.canvas.current.width = this.state.canvasWidth\n        const ctx = this.canvas.current.getContext(\"2d\")\n        var hex = this.props.theme.palette.primary.main\n        var r = parseInt(hex.slice(1, 3), 16),\n            g = parseInt(hex.slice(3, 5), 16),\n            b = parseInt(hex.slice(5, 7), 16),\n            a = 255;\n\n        if (this.scale() > 20) {\n            ctx.strokeStyle = this.props.theme.palette.lines;\n            var i;\n            for (i = 0; i < this.state.canvasHeight; i += this.scale()) {\n                ctx.moveTo(0, this.state.canvasHeight - i);\n                ctx.lineTo(this.state.canvasWidth, this.state.canvasHeight - i);\n                ctx.stroke();\n            }\n\n            for (i = 0; i < this.state.canvasWidth; i += this.scale()) {\n                ctx.moveTo(i, 0);\n                ctx.lineTo(i, this.state.canvasHeight);\n                ctx.stroke();\n            }\n        }\n\n        var canvasData = ctx.getImageData(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n        this.props.results.locations.forEach(loc => {\n            var x = Math.round(loc.x * this.scale())\n            var y = this.state.canvasHeight - Math.round(loc.y * this.scale()) - 1\n            if (x < 0 || x > this.state.canvasWidth - 1 || y < 0 || y > this.state.canvasHeight - 1) return\n            var index = (x + y * this.state.canvasWidth) * 4;\n\n            canvasData.data[index + 0] = r;\n            canvasData.data[index + 1] = g;\n            canvasData.data[index + 2] = b;\n            canvasData.data[index + 3] = a;\n        });\n        ctx.putImageData(canvasData, 0, 0);\n    }\n\n    updateDimensions = () => {\n        const canvas = this.canvas_container.current\n        const canvasRect = canvas.getBoundingClientRect()\n        const documentRect = document.body.getBoundingClientRect()\n\n        this.setState({\n            canvasHeight: canvas.clientHeight - 6,\n            canvasWidth:  canvas.clientWidth - 6,\n            canvasLeft:  canvasRect.left - documentRect.left,\n            canvasTop:   canvasRect.top  - documentRect.top,\n        })\n    }\n\n    scale = () => {\n        return Math.min((this.state.canvasWidth - 1) / this.props.reach, (this.state.canvasHeight - 1) / this.props.maxHeight, 300)\n    }\n\n    render() {\n        const time = this.props.time\n        const loc = this.props.results.locations[time]\n        const velXY = this.props.results.velocities[time]\n        const accXY = this.props.results.accelerations[time]\n        \n        const arrowLoc = {\n            x: this.state.canvasLeft + (Math.round(loc.x * this.scale())),\n            y: this.state.canvasTop  + (this.state.canvasHeight - Math.round(loc.y * this.scale()) - 1) \n        }\n\n        const velocity = {\n            value: Math.hypot(velXY.x, velXY.y),\n            angle: Math.atan2(velXY.y, velXY.x)\n        }\n\n        const acceleration = {\n            value: Math.hypot(accXY.x, accXY.y),\n            angle: Math.atan2(accXY.y, accXY.x)\n        }\n\n        const ballRadius = this.props.ballRadius\n\n        const classes = this.props.classes\n\n        return (\n            <>\n                <div\n                    style={{\n                        width:  \"100%\",\n                        height: \"100%\",\n                    }}\n                    ref={this.canvas_container}\n                >\n                    <canvas \n                        style={{ position: \"absolute\", zIndex: 0 }}\n                        width ={this.state.canvasWidth}\n                        height={this.state.canvasHeight}\n                        ref={this.canvas}\n                    />\n                    <Paper \n                        className={classes.container}\n                        elevation={5}\n                    >\n                        {[\n                            { variable: <>t</>,                      unit: \"ms\",       value: this.props.time * this.props.timeChange, },\n                            { variable: <>h<sub>max</sub></>,        unit: \"m\",        value: this.props.maxHeight, },\n                            { variable: <>x<sub>max</sub></>,        unit: \"m\",        value: this.props.reach },\n                            { variable: <>x<sub>t</sub></>,          unit: \"m\",        value: loc.x },\n                            { variable: <>h<sub>t</sub></>,          unit: \"m\",        value: loc.y },\n                            { variable: <>|v&#8407;<sub>t</sub>|</>, unit: \"m/s\",      value: velocity.value },\n                            { variable: <>&alpha;<sub>v</sub></>,    unit: <>&deg;</>, value: 180 * velocity.angle / Math.PI },\n                            { variable: <>v<sub>x</sub></>,          unit: \"m/s\",      value: velXY.x },\n                            { variable: <>v<sub>y</sub></>,          unit: \"m/s\",      value: velXY.y },\n                            { variable: <>|a&#8407;<sub>t</sub>|</>, unit: \"m/s^2\",    value: acceleration.value },\n                            { variable: <>&alpha;<sub>a</sub></>,    unit: <>&deg;</>, value: 180 * acceleration.angle / Math.PI },\n                            { variable: <>a<sub>x</sub></>,          unit: \"m/s^2\",    value: accXY.x },\n                            { variable: <>a<sub>y</sub></>,          unit: \"m/s^2\",    value: accXY.y },\n                        ].map((values, index) => (\n                            <Typography key={index}>\n                                {values.variable} = {values.value.toFixed(2)} {values.unit}\n                            </Typography>\n                        ))}\n                    </Paper>\n                </div>\n\n                {(this.props.showVelocity) ? (\n                    <Arrow\n                        x={arrowLoc.x}\n                        y={arrowLoc.y}\n                        value={velocity.value * this.scale() / 10}\n                        angle={velocity.angle}\n                        color={this.props.theme.palette.showVelocity}\n                    />\n                ) : (null)}\n                {(this.props.showAcceleration) ? (\n                    <Arrow\n                        x={arrowLoc.x}\n                        y={arrowLoc.y}\n                        value={acceleration.value * this.scale() / 10}\n                        angle={acceleration.angle}\n                        color={this.props.theme.palette.showAcceleration}\n                    />\n                ) : (null)}\n                {(this.props.showBall) ? (\n                    <Ball\n                        x={arrowLoc.x}\n                        y={arrowLoc.y}\n                        radius={ballRadius * this.scale() / 100}\n                        color={this.props.theme.palette.showBall}\n                    />\n                ) : (null)}\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(Simulation);","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Switch             from '@material-ui/core/Switch';\nimport TextField          from '@material-ui/core/TextField';\nimport InputAdornment     from '@material-ui/core/InputAdornment';\nimport FormControlLabel   from '@material-ui/core/FormControlLabel';\nimport Checkbox           from '@material-ui/core/Checkbox';\n\nconst styles = theme => ({\n\n})\n\nclass Settings extends React.PureComponent {\n\n    render() {\n        const startAngleDeg = 180 * this.props.start.angle / Math.PI\n        const startAngle    =       this.props.start.angle / Math.PI\n        return (\n            <>\n                {[\n                    { label: \"Przyspieszenie grawitacyjne\", name: \"gravity\",         unit: \"m/s^2\" },\n                    { label: \"Gęstość powietrza\",           name: \"airDensity\",      unit: \"kg/m^3\" },\n                    { label: \"Współczynnik oporu\",          name: \"dragCoefficient\", unit: \"\" },\n                    { label: \"Promień piłki\",               name: \"ballRadius\",      unit: \"cm\" },\n                    { label: \"Masa piłki\",                  name: \"ballMass\",        unit: \"kg\" },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={this.props.constants[values.name]}\n                        onChange={this.props.changeConstant}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">{values.unit}</InputAdornment>,\n                        }}\n                        inputProps={{ step: 0.1 }}\n                    />\n                ))}\n                {[\n                    { label: \"Wysokość\",            name: \"height\",   value: this.props.start.height,   precision: 0.1,  unit: \"m\" },\n                    { label: \"Prędkość początkowa\", name: \"velocity\", value: this.props.start.velocity, precision: 0.1,  unit: \"m/s\" },\n                    { label: \"Kąt\",                 name: \"angle\",    value: startAngle,                precision: 0.01, unit: <>&pi;</> },\n                    { label: \"Kąt\",                 name: \"angleDeg\", value: startAngleDeg,             precision: 0.1,  unit: <>&deg;</> },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={values.value}\n                        onChange={this.props.changeStart}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">{values.unit}</InputAdornment>,\n                        }}\n                        inputProps={{ step: values.precision }}\n                    />\n                ))}\n                {[\n                    { label: \"Liczba iteracji\", name: \"iterationLimit\", unit: \"\" },\n                    { label: \"Czas 1 iteracji\", name: \"timeChange\",     unit: \"ms\" },\n                ].map((values) => (\n                    <TextField\n                        label={values.label}\n                        key={values.name}\n                        type=\"number\"\n                        margin=\"normal\"\n                        name={values.name}\n                        value={this.props[values.name]}\n                        onChange={this.props.changeSetting}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">{values.unit}</InputAdornment>,\n                        }}\n                    />\n                ))}\n                <br />\n                {[\n                    { label: \"Prędkość\",       name: \"showVelocity\" },\n                    { label: \"Przyspieszenie\", name: \"showAcceleration\" },\n                    { label: \"Piłka\",          name: \"showBall\" },\n                ].map((values) => (\n                    <FormControlLabel\n                        label={values.label}\n                        key={values.name}\n                        control={\n                            <Checkbox\n                                color=\"primary\"\n                                name={values.name}\n                                checked={this.props[values.name]}\n                                onChange={this.props.changeSetting}\n                                style={{ color: this.props.theme.palette[values.name] }}\n                            />\n                        }\n                    />\n                ))}\n\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={this.props.theme.palette.type === \"dark\"}\n                            onChange={this.props.changeTheme}\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Dark mode <3\"\n                />\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(Settings);","import React from 'react';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles }     from '@material-ui/core/styles';\nimport { ThemeProvider }  from '@material-ui/styles';\nimport * as colors        from '@material-ui/core/colors';\nimport { CssBaseline }    from '@material-ui/core';\nimport Paper              from '@material-ui/core/Paper';\nimport Grid               from '@material-ui/core/Grid';\nimport Slider             from '@material-ui/core/Slider';\nimport IconButton         from '@material-ui/core/IconButton';\nimport PlayArrowIcon      from '@material-ui/icons/PlayArrow';\nimport PauseIcon          from '@material-ui/icons/Pause';\n\n\nimport Simulation from './SimulationComponent'\nimport Settings   from './SettingsComponent'\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            //main: colors.grey[800],\n            main: colors.orange[400],\n        },\n        secondary: {\n            main: colors.orange[400],\n        },\n        showAcceleration: colors.cyan[400],\n        showVelocity: colors.lightGreen[\"A700\"],\n        showBall: colors.orange[\"A700\"],\n        lines: colors.grey[700],\n    },\n    contrastThreshold: 3,\n});\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        type: \"light\",\n        primary: {\n            main: colors.indigo[600],\n        },\n        secondary: {\n            main: colors.orange[500],\n        },\n        showAcceleration: colors.cyan[400],\n        showVelocity: colors.lightGreen[\"A700\"],\n        showBall: colors.orange[\"A700\"],\n        lines: colors.grey[300],\n    },\n    contrastThreshold: 3,\n})\n\nconst styles = theme => ({\n    app: {\n        height: \"100%\",\n        width:  \"100%\",\n        position: \"absolute\", \n        top:  0,\n        left: 0, \n        display: \"flex\",\n        flexFlow: \"column\",\n    },\n    container: {\n        padding: theme.spacing(2),\n        margin:  theme.spacing(2),\n        flexGrow: 1,\n    },\n    paper_container: {\n        display: \"flex\", \n        flexFlow: \"column\",\n    }\n});\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: darkTheme,\n            results: {\n                locations: [ ],\n                velocities: [ ],\n                accelerations: [ ],\n            },\n            start: {\n                height: 1,\n                velocity: 40,\n                angle: Math.PI / 4,\n            },\n            constants: {\n                gravity: 9.81,\n                airDensity: 1.225,\n                dragCoefficient: 0.5,\n                ballRadius: 30,\n                ballMass: 0.5,\n            },\n            maxHeight: 0,\n            reach: 0,\n            iterationLimit: 10000,\n            timeChange: 1,\n            time: 0,\n            shouldCalculate: true,\n            showVelocity: true,\n            showAcceleration: true,\n            showBall: true,\n            animateInterval: null,\n        }\n        for (let index = 0; index < 100; index++) {\n            this.state.results.locations.push({ x: 100, y: 100+index })\n        }\n    }\n\n    calculate = () => {\n        var locations     = [], \n            velocities    = [], \n            accelerations = [];\n        var reach = 0,\n            maxHeight = 0;\n\n        const constants = {\n            ...this.state.constants, \n            gravity: parseFloat(this.state.constants.gravity)\n        };\n\n        const k = 0.5 * constants.dragCoefficient * constants.airDensity * Math.pow(constants.ballRadius / 100, 2) * Math.PI / constants.ballMass\n\n        const timeChange = this.state.timeChange / 1000\n\n        locations[0] = { x: 0, y: parseFloat(this.state.start.height) }\n        velocities[0] = { \n            x: Math.cos(this.state.start.angle) * this.state.start.velocity,\n            y: Math.sin(this.state.start.angle) * this.state.start.velocity \n        }\n\n        if (this.state.iterationLimit < 2) return\n\n        for(let i = 0; i < this.state.iterationLimit; i++) {\n            accelerations[i] = {\n                x: -(k * velocities[i].x * Math.sqrt(Math.pow(velocities[i].x, 2) + Math.pow(velocities[i].y, 2))),\n                y: -(k * velocities[i].y * Math.sqrt(Math.pow(velocities[i].x, 2) + Math.pow(velocities[i].y, 2)) + constants.gravity),\n            }\n\n            velocities[i + 1] = {\n                x: velocities[i].x + accelerations[i].x * timeChange,\n                y: velocities[i].y + accelerations[i].y * timeChange,\n            }\n\n            locations[i + 1] = {\n                x: locations[i].x + velocities[i].x * timeChange + accelerations[i].x * Math.pow(timeChange, 2) * 0.5,\n                y: locations[i].y + velocities[i].y * timeChange + accelerations[i].y * Math.pow(timeChange, 2) * 0.5,\n            }\n\n            if (locations[i + 1].y < 0) break\n\n            reach     = Math.max(reach,     locations[i].x)\n            maxHeight = Math.max(maxHeight, locations[i].y)\n        }\n        console.log(accelerations)\n\n        this.setState({\n            results: {\n                locations,\n                velocities,\n                accelerations,\n            },\n            reach,\n            maxHeight,\n            time: Math.min(this.state.time, accelerations.length - 1),\n            shouldCalculate: false,\n        })\n    }\n\n    changeConstant = (evt) => {\n        this.animation(0)\n        this.setState({\n            constants: { \n                ...this.state.constants,\n                [evt.target.name]: evt.target.value,\n            },\n            shouldCalculate: true,\n        })\n    }\n\n    changeStart = (evt) => {\n        this.animation(0)\n        let event = { ...evt }\n        if (event.target.name === \"angleDeg\") {\n            event = {\n                ...evt,\n                target: {\n                    ...evt.target,\n                    value: Math.PI * ((parseFloat(event.target.value) / 180) % 0.5),\n                    name: \"angle\",\n                }\n            }\n        } else if (event.target.name === \"angle\") {\n            event = {\n                ...evt,\n                target: {\n                    ...evt.target,\n                    value: Math.PI * (parseFloat(event.target.value) % 0.5),\n                    name: \"angle\",\n                }\n            }\n        }\n\n        this.setState({\n            start: { \n                ...this.state.start,\n                [event.target.name]: event.target.value,\n            },\n            shouldCalculate: true,\n        })\n    }\n\n    changeSetting = (evt) => {\n        this.animation(0)\n        if (evt.target.name === \"timeChange\" || evt.target.name === \"iterationLimit\") {\n            this.setState({\n                [evt.target.name]: evt.target.value,\n                shouldCalculate: true,\n            })\n        } else if (evt.target.name === \"showAcceleration\" || \n                   evt.target.name === \"showVelocity\" ||\n                   evt.target.name === \"showBall\") {\n            this.setState({\n                [evt.target.name]: evt.target.checked,\n            })\n        } else {\n            this.setState({\n                [evt.target.name]: evt.target.value,\n            })\n        }\n    }\n\n    changeTime = (evt, value) => {\n        this.setState({\n            time: value\n        })\n    }\n\n    changeTheme = () => {\n        if (this.state.theme.palette.type === \"dark\") {\n            this.setState({\n                theme: lightTheme\n            })\n        } else {\n            this.setState({\n                theme: darkTheme\n            })\n        }\n    }\n\n    animation = (result = -1) => {\n        if ((result === -1 && this.state.animateInterval !== null) || result === 0) {\n            clearInterval(this.state.animateInterval)\n            this.setState({\n                animateInterval: null,\n            })\n        } else {\n            let animateInterval = setInterval(() => this.animationTick(Math.max(1, Math.round((this.state.results.accelerations.length - 1) / 300))), 30)\n            this.setState({\n                animateInterval\n            })\n        }\n    }\n\n    animationTick = (tickTime) => {\n        if (this.state.time + tickTime > (this.state.results.accelerations.length - 1)) {\n            clearInterval(this.state.animateInterval)\n            this.setState({\n                time: 0,\n                animateInterval: null,\n            })\n        } else {\n            this.setState((state, props) => ({\n                time: state.time + tickTime,\n            }))\n        }\n    }\n\n    componentWillMount() {\n        this.calculate()\n    }\n\n    componentDidUpdate() {\n        if (this.state.shouldCalculate === true) {\n            this.calculate()\n        }\n    }\n\n    render() {\n        const classes = this.props.classes\n        return (\n            <ThemeProvider theme={this.state.theme}>\n                <CssBaseline />\n                <div className={classes.app}>\n                    <Grid \n                        container\n                        style={{\n                            flexGrow: 1 \n                        }}\n                    >\n                        <Grid item xs={9} className={classes.paper_container} >\n                            <Paper \n                                className={classes.container}\n                                style={{\n                                    display: \"flex\",\n                                }}\n                            >\n                                <Simulation \n                                    results={this.state.results}\n                                    time={this.state.time}\n                                    timeChange={this.state.timeChange}\n                                    reach={this.state.reach}\n                                    maxHeight={this.state.maxHeight}\n                                    ballRadius={this.state.constants.ballRadius}\n                                    showAcceleration={this.state.showAcceleration}\n                                    showVelocity={this.state.showVelocity}\n                                    showBall={this.state.showBall}\n                                />\n                            </Paper>\n                        </Grid>\n                        <Grid item className={classes.paper_container} >\n                            <Paper \n                                className={classes.container}\n                                style={{\n                                    padding:       this.props.theme.spacing(1),\n                                    paddingTop:    this.props.theme.spacing(3),\n                                    paddingBottom: this.props.theme.spacing(3),\n                                }}\n                            >\n                                <Slider\n                                    orientation=\"vertical\"\n                                    variant=\"secondary\"\n                                    defaultValue={30}\n                                    value={this.state.time}\n                                    min={0}\n                                    max={this.state.results.accelerations.length - 1}\n                                    onChange={this.changeTime}\n                                    style={{ height: \"90%\" }}\n                                />\n                                <IconButton \n                                    color=\"inherit\"\n                                    aria-label=\"Menu\"\n                                    onClick={() => this.animation()}\n                                    style={{ display: \"flex\" }}\n                                >\n                                    {(this.state.animateInterval) ? (<PauseIcon />) : (<PlayArrowIcon />)}\n                                </IconButton>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs className={classes.paper_container} >\n                            <Paper className={classes.container}>\n                                <Settings\n                                    constants={this.state.constants}\n                                    start={this.state.start}\n                                    reach={this.state.reach}\n                                    maxHeight={this.state.maxHeight}\n                                    iterationLimit={this.state.iterationLimit}\n                                    timeChange={this.state.timeChange}\n                                    showVelocity={this.state.showVelocity}\n                                    showAcceleration={this.state.showAcceleration}\n                                    showBall={this.state.showBall}\n                                    changeConstant={this.changeConstant}\n                                    changeStart={this.changeStart}\n                                    changeSetting={this.changeSetting}\n                                    changeTheme={this.changeTheme}\n                                />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </div>\n            </ThemeProvider>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: 1 })(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}